{"ast":null,"code":"var _jsxFileName = \"/Users/alexander/Desktop/translation_memory/src/Elements/TranslationMemory.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport DocumentUploader from \"./DocumentUploader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TranslationMemory = () => {\n  _s();\n  const [phrases, setPhrases] = React.useState();\n  const [currentPhrase, setCurrentPhrase] = React.useState();\n  const [reveal, setReveal] = React.useState(false);\n  const handleReveal = event => {\n    setReveal(!reveal);\n  };\n  const handleRestart = () => {\n    console.log(\"Beginnning a new game\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"The Phrase Translation Memory Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"../Cartoon.png\",\n        width: \"200\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"new_game\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Upload a CSV with columns English Text, Translated Text, and Included\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DocumentUploader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"in_game\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Write the translation with correct spelling:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: currentPhrase === null || currentPhrase === void 0 ? void 0 : currentPhrase.english_text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"reveal\",\n        onClick: handleReveal,\n        children: \"Reveal Translation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"end_game\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You've gotten all translations correct!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"restart\",\n        onClick: handleRestart,\n        children: \"Restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(TranslationMemory, \"xly0QtJ9NpyyH3QHWkP1o3XAouo=\");\n_c = TranslationMemory;\nexport default TranslationMemory;\nvar _c;\n$RefreshReg$(_c, \"TranslationMemory\");","map":{"version":3,"names":["React","DocumentUploader","jsxDEV","_jsxDEV","Fragment","_Fragment","TranslationMemory","_s","phrases","setPhrases","useState","currentPhrase","setCurrentPhrase","reveal","setReveal","handleReveal","event","handleRestart","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","src","width","id","english_text","onClick","_c","$RefreshReg$"],"sources":["/Users/alexander/Desktop/translation_memory/src/Elements/TranslationMemory.tsx"],"sourcesContent":["import React from \"react\";\nimport Phrase from \"../Models/Phrase\";\nimport DocumentUploader from \"./DocumentUploader\";\n\nconst TranslationMemory = () => {\n\n  const [phrases, setPhrases] = React.useState<Phrase[]>();\n  const [currentPhrase, setCurrentPhrase] = React.useState<Phrase>();\n\n  const [reveal, setReveal] = React.useState<Boolean>(false);\n\n  const handleReveal = (event: any) => {\n    setReveal(!reveal);\n  }\n\n  const handleRestart = () => {\n    console.log(\"Beginnning a new game\");\n  }\n\n  return (\n    <>\n      <header>\n        <h1>\n          The Phrase Translation Memory Game\n        </h1>\n        <img src=\"../Cartoon.png\" width=\"200\"/>\n      </header>\n\n      <div id=\"new_game\">\n        <p>\n          Upload a CSV with columns English Text, Translated Text, and Included \n        </p>\n        <DocumentUploader />\n      </div>\n\n      <div id=\"in_game\">\n        <p>\n          Write the translation with correct spelling:\n        </p>\n        <p>\n          {currentPhrase?.english_text}\n        </p>\n        <button id=\"reveal\" onClick={handleReveal}>\n          Reveal Translation\n        </button>\n      </div>\n\n      <div id=\"end_game\">\n        <p>\n          You've gotten all translations correct!\n        </p>\n        <button id=\"restart\" onClick={handleRestart}>\n          Restart\n        </button>\n      </div>\n    </>\n  )\n}\n\nexport default TranslationMemory;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}