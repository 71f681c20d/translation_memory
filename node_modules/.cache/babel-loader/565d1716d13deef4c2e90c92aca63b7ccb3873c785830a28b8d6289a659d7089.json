{"ast":null,"code":"var _jsxFileName = \"/Users/alexander/Desktop/translation_memory/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Papa from \"papaparse\";\nimport logo from './logo.svg';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [phrases, setPhrases] = React.useState();\n  const [currentPhrase, setCurrentPhrase] = React.useState();\n  const changeHandler = event => {\n    console.log(event.target.files[0]);\n    parseCsv(event);\n  };\n  const parseCsv = event => {\n    // Passing file data (event.target.files[0]) to parse using Papa.parse\n    Papa.parse(event.target.files[0], {\n      header: true,\n      skipEmptyLines: true,\n      complete: function (results) {\n        console.log(results.data);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Upload a CSV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"file\",\n        accept: \".csv\",\n        onChange: changeHandler,\n        style: {\n          display: \"block\",\n          margin: \"10px auto\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2i8YysJAfGDpLgRu4AtToG3DVGg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Papa","logo","jsxDEV","_jsxDEV","App","_s","phrases","setPhrases","useState","currentPhrase","setCurrentPhrase","changeHandler","event","console","log","target","files","parseCsv","parse","header","skipEmptyLines","complete","results","data","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","name","accept","onChange","style","display","margin","_c","$RefreshReg$"],"sources":["/Users/alexander/Desktop/translation_memory/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport Papa from \"papaparse\";\nimport { useState } from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n\n  const [phrases, setPhrases] = React.useState();\n  const [currentPhrase, setCurrentPhrase] = React.useState();\n  \n\n  const changeHandler = (event: any) => {\n    console.log(event.target.files[0]);\n    parseCsv(event);\n  };\n\n  const parseCsv = (event: { target: any; }) => {\n    // Passing file data (event.target.files[0]) to parse using Papa.parse\n    Papa.parse(event.target.files[0], {\n      header: true,\n      skipEmptyLines: true,\n      complete: function (results: { data: any; }) {\n        console.log(results.data)\n      },\n    });\n  }\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Upload a CSV\n        </p>\n\n        <input\n          type=\"file\"\n          name=\"file\"\n          accept=\".csv\"\n          onChange={changeHandler}\n          style={{ display: \"block\", margin: \"10px auto\" }}\n        />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,WAAW;AAE5B,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,KAAK,CAACS,QAAQ,EAAE;EAC9C,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,KAAK,CAACS,QAAQ,EAAE;EAG1D,MAAMG,aAAa,GAAIC,KAAU,IAAK;IACpCC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IAClCC,QAAQ,CAACL,KAAK,CAAC;EACjB,CAAC;EAED,MAAMK,QAAQ,GAAIL,KAAuB,IAAK;IAC5C;IACAZ,IAAI,CAACkB,KAAK,CAACN,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,EAAE;MAChCG,MAAM,EAAE,IAAI;MACZC,cAAc,EAAE,IAAI;MACpBC,QAAQ,EAAE,SAAAA,CAAUC,OAAuB,EAAE;QAC3CT,OAAO,CAACC,GAAG,CAACQ,OAAO,CAACC,IAAI,CAAC;MAC3B;IACF,CAAC,CAAC;EACJ,CAAC;EAED,oBACEpB,OAAA;IAAKqB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBtB,OAAA;MAAQqB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5BtB,OAAA;QAAKuB,GAAG,EAAEzB,IAAK;QAACuB,SAAS,EAAC,UAAU;QAACG,GAAG,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAClD5B,OAAA;QAAAsB,QAAA,EAAG;MAEH;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,eAEJ5B,OAAA;QACE6B,IAAI,EAAC,MAAM;QACXC,IAAI,EAAC,MAAM;QACXC,MAAM,EAAC,MAAM;QACbC,QAAQ,EAAExB,aAAc;QACxByB,KAAK,EAAE;UAAEC,OAAO,EAAE,OAAO;UAAEC,MAAM,EAAE;QAAY;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACjD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACK;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACL;AAEV;AAAC1B,EAAA,CAxCQD,GAAG;AAAAmC,EAAA,GAAHnC,GAAG;AA0CZ,eAAeA,GAAG;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}