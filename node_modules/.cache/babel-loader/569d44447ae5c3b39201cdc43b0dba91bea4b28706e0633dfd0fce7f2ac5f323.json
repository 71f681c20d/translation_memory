{"ast":null,"code":"var _jsxFileName = \"/Users/alexander/Desktop/translation_memory/src/Elements/TranslationMemory/EndGame/EndGame.tsx\",\n  _s = $RefreshSig$();\nimport { useContext } from \"react\";\nimport { translationMemoryContext } from \"../TranslationMemory\";\nimport GameStats from \"./GameStats\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EndGame = () => {\n  _s();\n  const translationMemoryStore = useContext(translationMemoryContext);\n  const setCurrentPage = translationMemoryStore === null || translationMemoryStore === void 0 ? void 0 : translationMemoryStore.setCurrentPage;\n  const setIncorrectCount = translationMemoryStore === null || translationMemoryStore === void 0 ? void 0 : translationMemoryStore.setIncorrectCount;\n  const handleRestart = event => {\n    console.log('Restarting game');\n    setCurrentPage ? setCurrentPage('in_game') : console.error('Unable to restart game');\n  };\n  const handleNewGame = event => {\n    console.log('Starting a new game');\n    setCurrentPage ? setCurrentPage('new_game') : console.error('Unable to begin new game');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"end_game\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You've gotten all translations correct!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"restart\",\n        onClick: handleRestart,\n        children: \"Restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"new_game\",\n        onClick: handleNewGame,\n        children: \"New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GameStats, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(EndGame, \"FXKKE26cj2AJzNfSVi+0MGgZEqI=\");\n_c = EndGame;\nexport default EndGame;\nvar _c;\n$RefreshReg$(_c, \"EndGame\");","map":{"version":3,"names":["useContext","translationMemoryContext","GameStats","jsxDEV","_jsxDEV","Fragment","_Fragment","EndGame","_s","translationMemoryStore","setCurrentPage","setIncorrectCount","handleRestart","event","console","log","error","handleNewGame","children","id","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/alexander/Desktop/translation_memory/src/Elements/TranslationMemory/EndGame/EndGame.tsx"],"sourcesContent":["import { useContext } from \"react\";\nimport { translationMemoryContext } from \"../TranslationMemory\";\nimport GameStats from \"./GameStats\";\n\nconst EndGame = () => {\n\n  const translationMemoryStore = useContext(translationMemoryContext);\n  const setCurrentPage = translationMemoryStore?.setCurrentPage;\n  const setIncorrectCount = translationMemoryStore?.setIncorrectCount;\n\n  const handleRestart = (event: any) => {\n    console.log('Restarting game');\n    setCurrentPage? setCurrentPage('in_game'): console.error('Unable to restart game');\n  }\n\n  const handleNewGame = (event: any) => {\n    console.log('Starting a new game');\n    setCurrentPage? setCurrentPage('new_game'): console.error('Unable to begin new game');\n  }\n\n  return(\n    <>\n      <div id=\"end_game\">\n        <p>\n          You've gotten all translations correct!\n        </p>\n        <button id=\"restart\" onClick={handleRestart}>\n          Restart\n        </button>\n        <button id=\"new_game\" onClick={handleNewGame}>\n          New Game\n        </button>\n        <GameStats/>\n      </div>\n    </>\n  )\n}\n\nexport default EndGame"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,wBAAwB,QAAQ,sBAAsB;AAC/D,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEpB,MAAMC,sBAAsB,GAAGT,UAAU,CAACC,wBAAwB,CAAC;EACnE,MAAMS,cAAc,GAAGD,sBAAsB,aAAtBA,sBAAsB,uBAAtBA,sBAAsB,CAAEC,cAAc;EAC7D,MAAMC,iBAAiB,GAAGF,sBAAsB,aAAtBA,sBAAsB,uBAAtBA,sBAAsB,CAAEE,iBAAiB;EAEnE,MAAMC,aAAa,GAAIC,KAAU,IAAK;IACpCC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAC9BL,cAAc,GAAEA,cAAc,CAAC,SAAS,CAAC,GAAEI,OAAO,CAACE,KAAK,CAAC,wBAAwB,CAAC;EACpF,CAAC;EAED,MAAMC,aAAa,GAAIJ,KAAU,IAAK;IACpCC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IAClCL,cAAc,GAAEA,cAAc,CAAC,UAAU,CAAC,GAAEI,OAAO,CAACE,KAAK,CAAC,0BAA0B,CAAC;EACvF,CAAC;EAED,oBACEZ,OAAA,CAAAE,SAAA;IAAAY,QAAA,eACEd,OAAA;MAAKe,EAAE,EAAC,UAAU;MAAAD,QAAA,gBAChBd,OAAA;QAAAc,QAAA,EAAG;MAEH;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,eACJnB,OAAA;QAAQe,EAAE,EAAC,SAAS;QAACK,OAAO,EAAEZ,aAAc;QAAAM,QAAA,EAAC;MAE7C;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eACTnB,OAAA;QAAQe,EAAE,EAAC,UAAU;QAACK,OAAO,EAAEP,aAAc;QAAAC,QAAA,EAAC;MAE9C;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eACTnB,OAAA,CAACF,SAAS;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACR,iBACL;AAEP,CAAC;AAAAf,EAAA,CAhCKD,OAAO;AAAAkB,EAAA,GAAPlB,OAAO;AAkCb,eAAeA,OAAO;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}