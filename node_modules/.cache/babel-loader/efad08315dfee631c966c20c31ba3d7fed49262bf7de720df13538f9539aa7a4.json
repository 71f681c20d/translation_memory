{"ast":null,"code":"import _slicedToArray from\"/Users/alexander/Desktop/translation_memory/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useContext,useEffect}from\"react\";import{translationMemoryContext}from\"../TranslationMemory\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var InGame=function InGame(){var _remainingPhrases$cur,_remainingPhrases$cur2;var translationMemoryStore=useContext(translationMemoryContext);var setCurrentPage=translationMemoryStore===null||translationMemoryStore===void 0?void 0:translationMemoryStore.setCurrentPage;var phrases=translationMemoryStore===null||translationMemoryStore===void 0?void 0:translationMemoryStore.phrases;var setStartTime=translationMemoryStore===null||translationMemoryStore===void 0?void 0:translationMemoryStore.setStartTime;var incorrectCount=translationMemoryStore===null||translationMemoryStore===void 0?void 0:translationMemoryStore.incorrectCount;var setIncorrectCount=translationMemoryStore===null||translationMemoryStore===void 0?void 0:translationMemoryStore.setIncorrectCount;var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),reveal=_React$useState2[0],setReveal=_React$useState2[1];var _React$useState3=React.useState(JSON.parse(JSON.stringify(phrases))),_React$useState4=_slicedToArray(_React$useState3,2),remainingPhrases=_React$useState4[0],setRemainingPhrases=_React$useState4[1];// deep copy\nvar _React$useState5=React.useState(0),_React$useState6=_slicedToArray(_React$useState5,2),currentIndex=_React$useState6[0],setCurrentIndex=_React$useState6[1];useEffect(function(){setStartTime?setStartTime(new Date()):console.error('Unable to set start time');},[]);var handleReveal=function handleReveal(event){console.log('Revealing translation');setReveal(!reveal);};var handleIncorrect=function handleIncorrect(event){console.log('Incorrect translation');setIncorrectCount(incorrectCount+1);// Load the next phrase\nnextPhrase();};var handleCorrect=function handleCorrect(event){console.log('Correct translation');// If the user gets it correct, then delete that phrase from RemainingPhrases\nvar tempPhrases=remainingPhrases;tempPhrases.splice(currentIndex,1);setRemainingPhrases(tempPhrases);// Load the next phrase\nnextPhrase();};var nextPhrase=function nextPhrase(){// check if there are any more phrases\nif((remainingPhrases===null||remainingPhrases===void 0?void 0:remainingPhrases.length)===0){setCurrentPage?setCurrentPage('end_game'):console.error('There are no more phrases left');}// Randomly select a new index for the phrase array\nvar index=Math.floor(Math.random()*remainingPhrases.length);console.log('index: '+index);setCurrentIndex(index);setReveal(false);};useEffect(function(){nextPhrase();},[]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{id:\"in_game\",children:[/*#__PURE__*/_jsx(\"p\",{id:\"instructions\",style:{fontSize:20,color:\"blue\",textDecorationLine:\"underline\",fontStyle:\"italic\"},children:\"Write the translation with correct spelling:\"}),/*#__PURE__*/_jsx(\"p\",{id:\"english_text\",style:{fontSize:40,color:\"black\",fontWeight:\"bold\"},children:(_remainingPhrases$cur=remainingPhrases[currentIndex])===null||_remainingPhrases$cur===void 0?void 0:_remainingPhrases$cur.english_text}),/*#__PURE__*/_jsx(\"button\",{id:\"reveal\",onClick:handleReveal,style:{background:\"blue\",fontWeight:\"bold\"},children:\"Reveal Translation\"}),reveal&&/*#__PURE__*/_jsxs(\"div\",{id:\"revealable_component\",children:[/*#__PURE__*/_jsx(\"p\",{id:\"translated_text\",style:{fontSize:45,color:\"black\",fontWeight:\"bold\"},children:(_remainingPhrases$cur2=remainingPhrases[currentIndex])===null||_remainingPhrases$cur2===void 0?void 0:_remainingPhrases$cur2.translation}),/*#__PURE__*/_jsx(\"button\",{id:\"incorrect_button\",onClick:handleIncorrect,style:{background:\"red\"},children:\"Incorrect\"}),/*#__PURE__*/_jsx(\"button\",{id:\"correct_button\",onClick:handleCorrect,style:{background:\"green\"},children:\"Correct\"})]})]})});};export default InGame;","map":{"version":3,"names":["React","useContext","useEffect","translationMemoryContext","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","InGame","_remainingPhrases$cur","_remainingPhrases$cur2","translationMemoryStore","setCurrentPage","phrases","setStartTime","incorrectCount","setIncorrectCount","_React$useState","useState","_React$useState2","_slicedToArray","reveal","setReveal","_React$useState3","JSON","parse","stringify","_React$useState4","remainingPhrases","setRemainingPhrases","_React$useState5","_React$useState6","currentIndex","setCurrentIndex","Date","console","error","handleReveal","event","log","handleIncorrect","nextPhrase","handleCorrect","tempPhrases","splice","length","index","Math","floor","random","children","id","style","fontSize","color","textDecorationLine","fontStyle","fontWeight","english_text","onClick","background","translation"],"sources":["/Users/alexander/Desktop/translation_memory/src/Elements/TranslationMemory/InGame/InGame.tsx"],"sourcesContent":["import React, { useContext, useEffect } from \"react\";\nimport Phrase from \"../../../Models/Phrase\";\nimport { translationMemoryContext } from \"../TranslationMemory\";\n\nconst InGame = () => {\n\n  const translationMemoryStore = useContext(translationMemoryContext);\n  const setCurrentPage = translationMemoryStore?.setCurrentPage;\n  const phrases = translationMemoryStore?.phrases;\n  const setStartTime = translationMemoryStore?.setStartTime;\n  const incorrectCount = translationMemoryStore?.incorrectCount as number;\n  const setIncorrectCount = translationMemoryStore?.setIncorrectCount as Function;\n\n  const [reveal, setReveal] = React.useState<Boolean>(false);\n  const [remainingPhrases, setRemainingPhrases] = React.useState<Phrase[]>(JSON.parse(JSON.stringify(phrases as Phrase[]))); // deep copy\n  const [currentIndex, setCurrentIndex] = React.useState<number>(0);\n\n  useEffect(() => {\n    setStartTime ? setStartTime(new Date()) : console.error('Unable to set start time');\n  }, []);\n\n  const handleReveal = (event: any) => {\n    console.log('Revealing translation');\n    setReveal(!reveal);\n  }\n\n  const handleIncorrect = (event: any) => {\n\n    console.log('Incorrect translation');\n    setIncorrectCount(incorrectCount + 1);\n    // Load the next phrase\n    nextPhrase();\n  }\n\n  const handleCorrect = (event: any) => {\n    console.log('Correct translation');\n    // If the user gets it correct, then delete that phrase from RemainingPhrases\n    let tempPhrases: Phrase[] = remainingPhrases;\n    tempPhrases.splice(currentIndex, 1);\n    setRemainingPhrases(tempPhrases);\n    // Load the next phrase\n    nextPhrase();\n  }\n\n  const nextPhrase = () => {\n    // check if there are any more phrases\n    if (remainingPhrases?.length === 0) {\n      setCurrentPage ? setCurrentPage('end_game') : console.error('There are no more phrases left');\n    }\n    // Randomly select a new index for the phrase array\n    const index = Math.floor(Math.random() * remainingPhrases.length);\n    console.log('index: ' + index)\n    setCurrentIndex(index);\n    setReveal(false);\n  }\n\n  useEffect(() => {\n    nextPhrase();\n  }, []);\n\n\n\n  return (\n    <>\n      <div id=\"in_game\">\n        <p id=\"instructions\" style={{ fontSize: 20, color: \"blue\", textDecorationLine: \"underline\", fontStyle: \"italic\"}}>\n          Write the translation with correct spelling:\n        </p>\n        <p id=\"english_text\" style={{ fontSize: 40, color: \"black\", fontWeight: \"bold\"}}>\n          {remainingPhrases[currentIndex]?.english_text}\n        </p>\n        <button id=\"reveal\" onClick={handleReveal} style={{ background: \"blue\", fontWeight: \"bold\"}}>\n          Reveal Translation\n        </button>\n        {reveal &&\n          <div id=\"revealable_component\">\n            <p id=\"translated_text\" style={{ fontSize: 45, color: \"black\", fontWeight: \"bold\"}}>\n              {remainingPhrases[currentIndex]?.translation}\n            </p>\n            <button id=\"incorrect_button\" onClick={handleIncorrect} style={{ background: \"red\"}}>\n              Incorrect\n            </button>\n            <button id=\"correct_button\" onClick={handleCorrect} style={{ background: \"green\"}}>\n              Correct\n            </button>\n          </div>\n        }\n      </div>\n    </>\n  )\n}\n\nexport default InGame"],"mappings":"iIAAA,MAAO,CAAAA,KAAK,EAAIC,UAAU,CAAEC,SAAS,KAAQ,OAAO,CAEpD,OAASC,wBAAwB,KAAQ,sBAAsB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAEhE,GAAM,CAAAC,MAAM,CAAG,QAAT,CAAAA,MAAMA,CAAA,CAAS,KAAAC,qBAAA,CAAAC,sBAAA,CAEnB,GAAM,CAAAC,sBAAsB,CAAGZ,UAAU,CAACE,wBAAwB,CAAC,CACnE,GAAM,CAAAW,cAAc,CAAGD,sBAAsB,SAAtBA,sBAAsB,iBAAtBA,sBAAsB,CAAEC,cAAc,CAC7D,GAAM,CAAAC,OAAO,CAAGF,sBAAsB,SAAtBA,sBAAsB,iBAAtBA,sBAAsB,CAAEE,OAAO,CAC/C,GAAM,CAAAC,YAAY,CAAGH,sBAAsB,SAAtBA,sBAAsB,iBAAtBA,sBAAsB,CAAEG,YAAY,CACzD,GAAM,CAAAC,cAAc,CAAGJ,sBAAsB,SAAtBA,sBAAsB,iBAAtBA,sBAAsB,CAAEI,cAAwB,CACvE,GAAM,CAAAC,iBAAiB,CAAGL,sBAAsB,SAAtBA,sBAAsB,iBAAtBA,sBAAsB,CAAEK,iBAA6B,CAE/E,IAAAC,eAAA,CAA4BnB,KAAK,CAACoB,QAAQ,CAAU,KAAK,CAAC,CAAAC,gBAAA,CAAAC,cAAA,CAAAH,eAAA,IAAnDI,MAAM,CAAAF,gBAAA,IAAEG,SAAS,CAAAH,gBAAA,IACxB,IAAAI,gBAAA,CAAgDzB,KAAK,CAACoB,QAAQ,CAAWM,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACb,OAAO,CAAa,CAAC,CAAC,CAAAc,gBAAA,CAAAP,cAAA,CAAAG,gBAAA,IAAlHK,gBAAgB,CAAAD,gBAAA,IAAEE,mBAAmB,CAAAF,gBAAA,IAA+E;AAC3H,IAAAG,gBAAA,CAAwChC,KAAK,CAACoB,QAAQ,CAAS,CAAC,CAAC,CAAAa,gBAAA,CAAAX,cAAA,CAAAU,gBAAA,IAA1DE,YAAY,CAAAD,gBAAA,IAAEE,eAAe,CAAAF,gBAAA,IAEpC/B,SAAS,CAAC,UAAM,CACdc,YAAY,CAAGA,YAAY,CAAC,GAAI,CAAAoB,IAAI,EAAE,CAAC,CAAGC,OAAO,CAACC,KAAK,CAAC,0BAA0B,CAAC,CACrF,CAAC,CAAE,EAAE,CAAC,CAEN,GAAM,CAAAC,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAIC,KAAU,CAAK,CACnCH,OAAO,CAACI,GAAG,CAAC,uBAAuB,CAAC,CACpCjB,SAAS,CAAC,CAACD,MAAM,CAAC,CACpB,CAAC,CAED,GAAM,CAAAmB,eAAe,CAAG,QAAlB,CAAAA,eAAeA,CAAIF,KAAU,CAAK,CAEtCH,OAAO,CAACI,GAAG,CAAC,uBAAuB,CAAC,CACpCvB,iBAAiB,CAACD,cAAc,CAAG,CAAC,CAAC,CACrC;AACA0B,UAAU,EAAE,CACd,CAAC,CAED,GAAM,CAAAC,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAIJ,KAAU,CAAK,CACpCH,OAAO,CAACI,GAAG,CAAC,qBAAqB,CAAC,CAClC;AACA,GAAI,CAAAI,WAAqB,CAAGf,gBAAgB,CAC5Ce,WAAW,CAACC,MAAM,CAACZ,YAAY,CAAE,CAAC,CAAC,CACnCH,mBAAmB,CAACc,WAAW,CAAC,CAChC;AACAF,UAAU,EAAE,CACd,CAAC,CAED,GAAM,CAAAA,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAA,CAAS,CACvB;AACA,GAAI,CAAAb,gBAAgB,SAAhBA,gBAAgB,iBAAhBA,gBAAgB,CAAEiB,MAAM,IAAK,CAAC,CAAE,CAClCjC,cAAc,CAAGA,cAAc,CAAC,UAAU,CAAC,CAAGuB,OAAO,CAACC,KAAK,CAAC,gCAAgC,CAAC,CAC/F,CACA;AACA,GAAM,CAAAU,KAAK,CAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,CAAGrB,gBAAgB,CAACiB,MAAM,CAAC,CACjEV,OAAO,CAACI,GAAG,CAAC,SAAS,CAAGO,KAAK,CAAC,CAC9Bb,eAAe,CAACa,KAAK,CAAC,CACtBxB,SAAS,CAAC,KAAK,CAAC,CAClB,CAAC,CAEDtB,SAAS,CAAC,UAAM,CACdyC,UAAU,EAAE,CACd,CAAC,CAAE,EAAE,CAAC,CAIN,mBACEtC,IAAA,CAAAI,SAAA,EAAA2C,QAAA,cACE7C,KAAA,QAAK8C,EAAE,CAAC,SAAS,CAAAD,QAAA,eACf/C,IAAA,MAAGgD,EAAE,CAAC,cAAc,CAACC,KAAK,CAAE,CAAEC,QAAQ,CAAE,EAAE,CAAEC,KAAK,CAAE,MAAM,CAAEC,kBAAkB,CAAE,WAAW,CAAEC,SAAS,CAAE,QAAQ,CAAE,CAAAN,QAAA,CAAC,8CAElH,EAAI,cACJ/C,IAAA,MAAGgD,EAAE,CAAC,cAAc,CAACC,KAAK,CAAE,CAAEC,QAAQ,CAAE,EAAE,CAAEC,KAAK,CAAE,OAAO,CAAEG,UAAU,CAAE,MAAM,CAAE,CAAAP,QAAA,EAAAzC,qBAAA,CAC7EmB,gBAAgB,CAACI,YAAY,CAAC,UAAAvB,qBAAA,iBAA9BA,qBAAA,CAAgCiD,YAAY,EAC3C,cACJvD,IAAA,WAAQgD,EAAE,CAAC,QAAQ,CAACQ,OAAO,CAAEtB,YAAa,CAACe,KAAK,CAAE,CAAEQ,UAAU,CAAE,MAAM,CAAEH,UAAU,CAAE,MAAM,CAAE,CAAAP,QAAA,CAAC,oBAE7F,EAAS,CACR7B,MAAM,eACLhB,KAAA,QAAK8C,EAAE,CAAC,sBAAsB,CAAAD,QAAA,eAC5B/C,IAAA,MAAGgD,EAAE,CAAC,iBAAiB,CAACC,KAAK,CAAE,CAAEC,QAAQ,CAAE,EAAE,CAAEC,KAAK,CAAE,OAAO,CAAEG,UAAU,CAAE,MAAM,CAAE,CAAAP,QAAA,EAAAxC,sBAAA,CAChFkB,gBAAgB,CAACI,YAAY,CAAC,UAAAtB,sBAAA,iBAA9BA,sBAAA,CAAgCmD,WAAW,EAC1C,cACJ1D,IAAA,WAAQgD,EAAE,CAAC,kBAAkB,CAACQ,OAAO,CAAEnB,eAAgB,CAACY,KAAK,CAAE,CAAEQ,UAAU,CAAE,KAAK,CAAE,CAAAV,QAAA,CAAC,WAErF,EAAS,cACT/C,IAAA,WAAQgD,EAAE,CAAC,gBAAgB,CAACQ,OAAO,CAAEjB,aAAc,CAACU,KAAK,CAAE,CAAEQ,UAAU,CAAE,OAAO,CAAE,CAAAV,QAAA,CAAC,SAEnF,EAAS,GACL,GAEJ,EACL,CAEP,CAAC,CAED,cAAe,CAAA1C,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}