{"ast":null,"code":"var _jsxFileName = \"/Users/alexander/Desktop/translation_memory/src/Elements/TranslationMemory/InGame/InGame.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst InGame = () => {\n  _s();\n  const [reveal, setReveal] = React.useState(false);\n  const handleReveal = event => {\n    console.log('Revealing translation');\n    setReveal(!reveal);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"in_game\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"instructions\",\n        children: \"Write the translation with correct spelling:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"english_text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"reveal\",\n        onClick: handleReveal,\n        children: \"Reveal Translation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), reveal && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"revealable_component\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"translated_text\",\n          children: \"Put some translated text here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"incorrect_button\",\n          children: \"Incorrect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"correct_button\",\n          children: \"Correct\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(InGame, \"aQpGOjBATq/ElnUq/TLFAA9t1T4=\");\n_c = InGame;\nexport default InGame;\nvar _c;\n$RefreshReg$(_c, \"InGame\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","InGame","_s","reveal","setReveal","useState","handleReveal","event","console","log","children","id","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/alexander/Desktop/translation_memory/src/Elements/TranslationMemory/InGame/InGame.tsx"],"sourcesContent":["import React from \"react\";\n\nconst InGame = () => {\n\n  const [reveal, setReveal] = React.useState<Boolean>(false);\n\n  const handleReveal = (event: any) => {\n    console.log('Revealing translation');\n    setReveal(!reveal);\n  }\n\n  \n  return(\n    <>\n        <div id=\"in_game\">\n        <p id=\"instructions\">\n          Write the translation with correct spelling:\n        </p>\n        <p id=\"english_text\">\n          {/* {currentPhrase?.english_text} */}\n        </p>\n        <button id=\"reveal\" onClick={handleReveal}>\n          Reveal Translation\n        </button>\n        {reveal &&\n          <div id=\"revealable_component\">\n          <p id=\"translated_text\">\n            Put some translated text here\n          </p>\n          <button id=\"incorrect_button\">\n            Incorrect\n          </button>\n          <button id=\"correct_button\">\n            Correct\n          </button>\n        </div>\n        }\n      </div>\n    </>\n  )\n}\n\nexport default InGame"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,KAAK,CAACS,QAAQ,CAAU,KAAK,CAAC;EAE1D,MAAMC,YAAY,GAAIC,KAAU,IAAK;IACnCC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACpCL,SAAS,CAAC,CAACD,MAAM,CAAC;EACpB,CAAC;EAGD,oBACEL,OAAA,CAAAE,SAAA;IAAAU,QAAA,eACIZ,OAAA;MAAKa,EAAE,EAAC,SAAS;MAAAD,QAAA,gBACjBZ,OAAA;QAAGa,EAAE,EAAC,cAAc;QAAAD,QAAA,EAAC;MAErB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,eACJjB,OAAA;QAAGa,EAAE,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAEhB,eACJjB,OAAA;QAAQa,EAAE,EAAC,QAAQ;QAACK,OAAO,EAAEV,YAAa;QAAAI,QAAA,EAAC;MAE3C;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,EACRZ,MAAM,iBACLL,OAAA;QAAKa,EAAE,EAAC,sBAAsB;QAAAD,QAAA,gBAC9BZ,OAAA;UAAGa,EAAE,EAAC,iBAAiB;UAAAD,QAAA,EAAC;QAExB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAI,eACJjB,OAAA;UAAQa,EAAE,EAAC,kBAAkB;UAAAD,QAAA,EAAC;QAE9B;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS,eACTjB,OAAA;UAAQa,EAAE,EAAC,gBAAgB;UAAAD,QAAA,EAAC;QAE5B;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACL;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAEF,iBACL;AAEP,CAAC;AAAAb,EAAA,CAtCKD,MAAM;AAAAgB,EAAA,GAANhB,MAAM;AAwCZ,eAAeA,MAAM;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}