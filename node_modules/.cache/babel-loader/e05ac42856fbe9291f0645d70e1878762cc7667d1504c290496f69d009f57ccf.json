{"ast":null,"code":"var _jsxFileName = \"/Users/alexander/Desktop/translation_memory/src/Elements/TranslationMemory/InGame/InGame.tsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport { translationMemoryContext } from \"../TranslationMemory\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst InGame = () => {\n  _s();\n  const translationMemoryStore = useContext(translationMemoryContext);\n  const setCurrentPage = translationMemoryStore === null || translationMemoryStore === void 0 ? void 0 : translationMemoryStore.setCurrentPage;\n  const phrases = translationMemoryStore === null || translationMemoryStore === void 0 ? void 0 : translationMemoryStore.phrases;\n  const currentPhrase = translationMemoryStore === null || translationMemoryStore === void 0 ? void 0 : translationMemoryStore.currentPhrase;\n  const setCurrentPhrase = translationMemoryStore === null || translationMemoryStore === void 0 ? void 0 : translationMemoryStore.setCurrentPhrase;\n  const [reveal, setReveal] = React.useState(false);\n  const handleReveal = event => {\n    console.log('Revealing translation');\n    setReveal(!reveal);\n  };\n  const handleIncorrect = event => {\n    console.log('Incorrect translation');\n  };\n  const handleCorrect = event => {\n    console.log('Correct translation');\n    // If the user gets it correct, then delete that phrase from the array\n\n    // Load the next phrase\n  };\n\n  const nextPhrase = () => {\n    setCurrentPhrase(phrases === null || phrases === void 0 ? void 0 : phrases.pop());\n    setReveal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"in_game\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"instructions\",\n        children: \"Write the translation with correct spelling:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"english_text\",\n        children: \"Put some English text here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"reveal\",\n        onClick: handleReveal,\n        children: \"Reveal Translation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), reveal && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"revealable_component\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"translated_text\",\n          children: \"Put some translated text here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"incorrect_button\",\n          onClick: handleIncorrect,\n          children: \"Incorrect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"correct_button\",\n          onClick: handleCorrect,\n          children: \"Correct\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(InGame, \"CKUKWgwnV7WJr8UjdmLalAl0JAo=\");\n_c = InGame;\nexport default InGame;\nvar _c;\n$RefreshReg$(_c, \"InGame\");","map":{"version":3,"names":["React","useContext","translationMemoryContext","jsxDEV","_jsxDEV","Fragment","_Fragment","InGame","_s","translationMemoryStore","setCurrentPage","phrases","currentPhrase","setCurrentPhrase","reveal","setReveal","useState","handleReveal","event","console","log","handleIncorrect","handleCorrect","nextPhrase","pop","children","id","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/alexander/Desktop/translation_memory/src/Elements/TranslationMemory/InGame/InGame.tsx"],"sourcesContent":["import React, { useContext } from \"react\";\nimport { translationMemoryContext } from \"../TranslationMemory\";\n\nconst InGame = () => {\n\n  const translationMemoryStore = useContext(translationMemoryContext);\n  const setCurrentPage = translationMemoryStore?.setCurrentPage;\n  const phrases = translationMemoryStore?.phrases;\n  const currentPhrase = translationMemoryStore?.currentPhrase;\n  const setCurrentPhrase = translationMemoryStore?.setCurrentPhrase as Function;\n\n  const [reveal, setReveal] = React.useState<Boolean>(false);\n\n  const handleReveal = (event: any) => {\n    console.log('Revealing translation');\n    setReveal(!reveal);\n  }\n\n  const handleIncorrect = (event: any) => {\n    console.log('Incorrect translation');\n  }\n\n  const handleCorrect = (event: any) => {\n    console.log('Correct translation');\n    // If the user gets it correct, then delete that phrase from the array\n\n    // Load the next phrase\n  }\n\n  const nextPhrase = () => {\n    setCurrentPhrase(phrases?.pop())\n    setReveal(false);\n\n  }\n  \n  return(\n    <>\n        <div id=\"in_game\">\n        <p id=\"instructions\">\n          Write the translation with correct spelling:\n        </p>\n        <p id=\"english_text\">\n          {/* {currentPhrase?.english_text} */}\n          Put some English text here\n        </p>\n        <button id=\"reveal\" onClick={handleReveal}>\n          Reveal Translation\n        </button>\n        {reveal &&\n          <div id=\"revealable_component\">\n          <p id=\"translated_text\">\n            Put some translated text here\n          </p>\n          <button id=\"incorrect_button\" onClick={handleIncorrect}>\n            Incorrect\n          </button>\n          <button id=\"correct_button\" onClick={handleCorrect}>\n            Correct\n          </button>\n        </div>\n        }\n      </div>\n    </>\n  )\n}\n\nexport default InGame"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}