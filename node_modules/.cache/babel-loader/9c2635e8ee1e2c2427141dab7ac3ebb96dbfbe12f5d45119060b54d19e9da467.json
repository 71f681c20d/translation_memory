{"ast":null,"code":"var _jsxFileName = \"/Users/alexander/Desktop/translation_memory/src/Elements/TranslationMemory/NewGame/DocumentUploader.tsx\";\nimport Papa from \"papaparse\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DocumentUploader = () => {\n  const changeHandler = event => {\n    console.log(event.target.files[0]);\n    parseCsv(event);\n  };\n  const parseCsv = event => {\n    let raw_data = [];\n    // Passing file data (event.target.files[0]) to parse using Papa.parse\n    Papa.parse(event.target.files[0], {\n      header: true,\n      skipEmptyLines: true,\n      complete: function (results) {\n        console.log(results.data);\n        raw_data = results.data;\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"file\",\n        accept: \".csv\",\n        onChange: changeHandler,\n        style: {\n          display: \"block\",\n          margin: \"10px auto\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_c = DocumentUploader;\nexport default DocumentUploader;\nvar _c;\n$RefreshReg$(_c, \"DocumentUploader\");","map":{"version":3,"names":["Papa","React","jsxDEV","_jsxDEV","Fragment","_Fragment","DocumentUploader","changeHandler","event","console","log","target","files","parseCsv","raw_data","parse","header","skipEmptyLines","complete","results","data","children","type","name","accept","onChange","style","display","margin","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alexander/Desktop/translation_memory/src/Elements/TranslationMemory/NewGame/DocumentUploader.tsx"],"sourcesContent":["import Papa from \"papaparse\";\nimport React from \"react\";\nimport Phrase from \"../../../Models/Phrase\";\n\n\nconst DocumentUploader = () => {\n\n  const changeHandler = (event: any) => {\n    console.log(event.target.files[0]);\n    parseCsv(event);\n  };\n\n  const parseCsv = (event: any) => {\n    let raw_data: Phrase[] = [];\n    // Passing file data (event.target.files[0]) to parse using Papa.parse\n    Papa.parse(event.target.files[0], {\n      header: true,\n      skipEmptyLines: true,\n      complete: function (results: { data: any; }) {\n        console.log(results.data)\n        raw_data = results.data;\n      },\n    });\n  }\n\n\n  return (\n    <>\n    <div>\n    <input\n          type=\"file\"\n          name=\"file\"\n          accept=\".csv\"\n          onChange={changeHandler}\n          style={{ display: \"block\", margin: \"10px auto\" }}\n        />\n    </div>\n    </>\n  )\n}\n\nexport default DocumentUploader;"],"mappings":";AAAA,OAAOA,IAAI,MAAM,WAAW;AAC5B,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAI1B,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAE7B,MAAMC,aAAa,GAAIC,KAAU,IAAK;IACpCC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IAClCC,QAAQ,CAACL,KAAK,CAAC;EACjB,CAAC;EAED,MAAMK,QAAQ,GAAIL,KAAU,IAAK;IAC/B,IAAIM,QAAkB,GAAG,EAAE;IAC3B;IACAd,IAAI,CAACe,KAAK,CAACP,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,EAAE;MAChCI,MAAM,EAAE,IAAI;MACZC,cAAc,EAAE,IAAI;MACpBC,QAAQ,EAAE,SAAAA,CAAUC,OAAuB,EAAE;QAC3CV,OAAO,CAACC,GAAG,CAACS,OAAO,CAACC,IAAI,CAAC;QACzBN,QAAQ,GAAGK,OAAO,CAACC,IAAI;MACzB;IACF,CAAC,CAAC;EACJ,CAAC;EAGD,oBACEjB,OAAA,CAAAE,SAAA;IAAAgB,QAAA,eACAlB,OAAA;MAAAkB,QAAA,eACAlB,OAAA;QACMmB,IAAI,EAAC,MAAM;QACXC,IAAI,EAAC,MAAM;QACXC,MAAM,EAAC,MAAM;QACbC,QAAQ,EAAElB,aAAc;QACxBmB,KAAK,EAAE;UAAEC,OAAO,EAAE,OAAO;UAAEC,MAAM,EAAE;QAAY;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACjD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACA,iBACH;AAEP,CAAC;AAAAC,EAAA,GAlCK3B,gBAAgB;AAoCtB,eAAeA,gBAAgB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}